{"ast":null,"code":"var _jsxFileName = \"/home/coder-sanju/Desktop/learning_react_redux/weather_app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './style/App.css';\nimport React, { useState } from 'react';\nimport './style/Header.css';\nimport Header from './components/Header';\nimport Weatherinput from './components/weatherinput';\nimport Weatheroutput from './components/weatheroutput';\nimport Container from 'react-bootstrap/Container';\nimport './style/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [weather, setWeather] = useState([]);\n  const ApiKey = 'ebf06a6308489861a27888b030612b8c';\n\n  async function fetchData(e) {\n    const city = e.target.elements.city.value;\n    console.log(city);\n    e.preventDefault();\n    const apidata = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${ApiKey}`).then(res => res.json()).then(data => data);\n    setWeather({\n      data: apidata,\n      city: apidata.city,\n      country: apiData.sys.country,\n      description: apidata.weather[0].description,\n      temperature: apidata.main.temp,\n      error: \"\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: /*#__PURE__*/_jsxDEV(Weatherinput, {\n            getWeather: fetchData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: /*#__PURE__*/_jsxDEV(Weatheroutput, {\n            city: weather.city,\n            description: weather.description,\n            temperature: weather.temperature,\n            error: weather.error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qMfgaod/2OvpdQyEX6xt35ISZVA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/coder-sanju/Desktop/learning_react_redux/weather_app/src/App.js"],"names":["React","useState","Header","Weatherinput","Weatheroutput","Container","App","weather","setWeather","ApiKey","fetchData","e","city","target","elements","value","console","log","preventDefault","apidata","fetch","then","res","json","data","country","apiData","sys","description","temperature","main","temp","error"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAO,iBAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMQ,MAAM,GAAG,kCAAf;;AACA,iBAAeC,SAAf,CAAyBC,CAAzB,EAA4B;AAC1B,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBF,IAAlB,CAAuBG,KAApC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAD,IAAAA,CAAC,CAACO,cAAF;AACA,UAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,qDAAoDR,IAAK,uBAAsBH,MAAO,EAAxF,CAAL,CACnBY,IADmB,CACdC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADO,EAEnBF,IAFmB,CAEdG,IAAI,IAAIA,IAFM,CAAtB;AAGAhB,IAAAA,UAAU,CAAC;AACTgB,MAAAA,IAAI,EAAEL,OADG;AAETP,MAAAA,IAAI,EAAEO,OAAO,CAACP,IAFL;AAGTa,MAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYF,OAHZ;AAITG,MAAAA,WAAW,EAAET,OAAO,CAACZ,OAAR,CAAgB,CAAhB,EAAmBqB,WAJvB;AAKTC,MAAAA,WAAW,EAAEV,OAAO,CAACW,IAAR,CAAaC,IALjB;AAMTC,MAAAA,KAAK,EAAC;AANG,KAAD,CAAV;AASD;;AACD,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,SAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE,QAAC,YAAD;AAAc,YAAA,UAAU,EAAEtB;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE,QAAC,aAAD;AACE,YAAA,IAAI,EAAEH,OAAO,CAACK,IADhB;AAEE,YAAA,WAAW,EAAEL,OAAO,CAACqB,WAFvB;AAGE,YAAA,WAAW,EAAErB,OAAO,CAACsB,WAHvB;AAIE,YAAA,KAAK,EAAEtB,OAAO,CAACyB;AAJjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA1CQ1B,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import './style/App.css';\nimport React, {useState} from 'react';\nimport './style/Header.css';\nimport Header from './components/Header';\nimport Weatherinput from './components/weatherinput';\nimport Weatheroutput from './components/weatheroutput';\nimport Container from 'react-bootstrap/Container';\nimport './style/App.css';\n\nfunction App() {\n  const [weather, setWeather] = useState([])\n  const ApiKey = 'ebf06a6308489861a27888b030612b8c'\n  async function fetchData(e) {\n    const city = e.target.elements.city.value\n    console.log(city)\n    e.preventDefault()\n    const apidata = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${ApiKey}`)\n      .then(res => res.json())\n      .then(data => data)\n    setWeather({\n      data: apidata,\n      city: apidata.city,\n      country: apiData.sys.country,\n      description: apidata.weather[0].description,\n      temperature: apidata.main.temp,\n      error:\"\"\n\n    })\n  }\n  return (\n    <div>\n      <div className=\"App\">\n        <Header />\n      </div>\n      <Container>\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <Weatherinput getWeather={fetchData }/>\n          </div>\n          <div className=\"col-sm-6\">\n            <Weatheroutput\n              city={weather.city}\n              description={weather.description}\n              temperature={weather.temperature}\n              error={weather.error}\n            />\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}